<?xml version="1.0" encoding="UTF-8"?>
<javascript app="printfulintegration">
 <file javascript_app="printfulintegration" javascript_location="front" javascript_path="controllers/cart" javascript_name="checkout.cart.js" javascript_type="controller" javascript_version="10008" javascript_position="1000050">;( function($, _, undefined) {&#13;
    &quot;use strict&quot;;&#13;
&#13;
	ips.controller.register('printful.cart.checkout', {&#13;
        &#13;
        initialize: function() {&#13;
            this.on('submit', this.submit);&#13;
        },&#13;
&#13;
        submit: function(e) {&#13;
            e.preventDefault();&#13;
            e.stopPropagation();&#13;
&#13;
            let form = this.scope.find('form'),&#13;
                newUrl = form.data('shippingurl'),&#13;
                newTitle = form.data('shippingtitle'),&#13;
                currentDialog = ips.ui.dialog.getObj( $('#cartCheckout') ),&#13;
                formData = form.serialize();&#13;
&#13;
            currentDialog.updateContent('');&#13;
            currentDialog.setLoading(true);&#13;
&#13;
            ips.getAjax()(form.attr('action'), {&#13;
                data: formData,&#13;
                type: 'post',&#13;
            }).done(function(response) {&#13;
                let newDialog =  ips.ui.dialog.create({&#13;
                        title: newTitle,&#13;
                        url: newUrl,&#13;
                    });&#13;
                &#13;
                currentDialog.hide();&#13;
                newDialog.show();&#13;
            });&#13;
        }&#13;
    });&#13;
}(jQuery, _));</file>
 <file javascript_app="printfulintegration" javascript_location="front" javascript_path="controllers/cart" javascript_name="shopping.cart.js" javascript_type="controller" javascript_version="10008" javascript_position="1000050"><![CDATA[;( function($, _, undefined) {
    "use strict";

	ips.controller.register('printful.cart.review', {
        
        initialize: function() {
            this.on('change', 'form[data-role="quantityForm"] > select', this.updateQuantity);
        },

        updateQuantity(e) {
            let selected = $(e.currentTarget).children('option:selected').html(),
                url = $(e.currentTarget).parent().attr('action') + `&quantity=${selected}`;

            ips.getAjax()(url).done(function(response) {
                $('div[data-role="merchCartContent"]').html(response.cart);
            });
        }
    });
}(jQuery, _));]]></file>
 <file javascript_app="printfulintegration" javascript_location="front" javascript_path="controllers/merch" javascript_name="list.merch.js" javascript_type="controller" javascript_version="10008" javascript_position="1000100"><![CDATA[;( function($, _, undefined) {
    "use strict";

	ips.controller.register('store.merch.list', {
        initialize: function() {
            this.on(document, 'click', "#elCurrency_menu > li:not(.ipsMenu_itemChecked) > a", this.currencyChangeWarn);
        },

        currencyChangeWarn: function(e) {
            e.stopImmediatePropagation();
            e.preventDefault();

            ips.ui.alert.show({
                type: 'confirm',
                icon:  'exclamation-triangle',
                message: ips.getString('store_currency_change_warning'),
                callbacks: {
                    ok: () => {
                        window.location = $(e.target).attr('href');
                    }
                }
            });
        }
    });
}(jQuery, _));]]></file>
 <file javascript_app="printfulintegration" javascript_location="front" javascript_path="controllers/product" javascript_name="page.product.js" javascript_type="controller" javascript_version="10008" javascript_position="1000150"><![CDATA[;( function($, _, undefined) {
    "use strict";

	ips.controller.register('printful.product.page', {
        _prices: null,

        initialize: function() {
            $('.productImageCarousel').slick({
                dots: true,
                infinite: true,
                slidesToShow: 1,
                nextArrow: '<button type="button" class="slick-prev"><i class="fa fa-chevron-right" aria-hidden="true"></i></button>',
                prevArrow: '<button type="button" class="slick-next"><i class="fa fa-chevron-left" aria-hidden="true"></i></button>',
            });

            this._prices = this.scope.find('.cPrintful_itemPrice').data('pricing');

            this.on('change', 'select[name="printful_item_size"]', this.changePrice);
            this.on('submit', '.ipsForm', this.addToCart);
        },

        changePrice: function(e) {
            let size = $(e.currentTarget).children('option:selected').html(),
                color = this.scope.find('select[name="printful_item_color"]').children('option:selected').html(),
                itemPriceContainer = this.scope.find('.cPrintful_itemPrice');
            
            ips.getAjax()(
                itemPriceContainer.data('url') + "&size=" + size + "&color=" + color,
            ).done((response) => {
                itemPriceContainer.html( response.price );
            })
        },

        addToCart: function(e) {
            e.preventDefault();
            let form = $(e.currentTarget),
                data = form.serialize(),
                formDims = ips.utils.position.getElemDims( form ),
                formPos = ips.utils.position.getElemPosition( form ),
                loadingElem = $('<div class="ipsLoading ipsAreaBackground_light ipsAreaBackground_rounded" />');

            form.after( loadingElem );
    
            loadingElem.css({
                position: 'absolute',
                top: formPos.offsetPos.top + 'px',
                left: formPos.offsetPos.left + 'px',
                width: formDims.outerWidth + 'px',
                height: formDims.outerHeight + 'px'
            });

            ips.getAjax()(
                form.attr('action'),
                {
                    data,
                    type: 'post'
                }
            ).done((response) => {
                let content = $('<div />').html(response.content);

                ips.getContainer().append(content);

                let dialog = ips.ui.dialog.create({
                    title: this.scope.find('.ipsType_pageTitle.ipsType_largeTitle').text(),
                    content,
                    size: 'narrow',
                    forceReload: true,
                    modal: true,
                });

                dialog.show();

                if( response.cart ) {
                    $('#printfulCart_container').replaceWith( response.cart );
                    $('#printfulCart_sep').removeClass('ipsHide');
                }

                loadingElem.remove();
            });
        }
    });
}(jQuery, _));]]></file>
 <file javascript_app="printfulintegration" javascript_location="admin" javascript_path="controllers/products" javascript_name="ips.products.edit.js" javascript_type="controller" javascript_version="10008" javascript_position="1000050">;( function($, _, undefined){&#13;
	&quot;use strict&quot;;&#13;
&#13;
	ips.controller.register('printfulintegration.admin.products.edit', {&#13;
        initialize: function() {&#13;
&#13;
            if ( $('input[name=&quot;printful_product_images_primary_image&quot;]').length ) {&#13;
				$('input[name=&quot;printful_product_images_primary_image&quot;]:first').attr('checked', true);&#13;
			}&#13;
        }&#13;
    });&#13;
&#13;
}(jQuery, _));</file>
 <file javascript_app="printfulintegration" javascript_location="admin" javascript_path="controllers/products" javascript_name="ips.products.list.js" javascript_type="controller" javascript_version="10008" javascript_position="1000050"><![CDATA[;( function($, _, undefined){
	"use strict";

	ips.controller.register('printfulintegration.admin.products.list', {

		_ajaxCall: null,
		selectedItems: null,

        initialize: function() {
			this.on('click', '[data-page]', this.updateView);
			this.on('submit', '[data-role="pageJump"]', this.pageJump);
			this.on('click', '[data-action="submitSearch"]', this.submitSearch);
			this.on('keydown', '#printfulSearch', this.submitSearch);
			this.on(window, 'statechange', this.stateChange);
			this.on('click', '[data-action="markForImport"]', this.markItemForImport);
			this.on('click', '[data-action="unmarkForImport"]', this.unmarkItemForImport);
			this.on(window, 'load', this.checkMarkedProducts);
			this.on('click', '[data-action="process"]', this.submitImport);
			this.on('click', '[data-action="cancel"]', this.cancelImport);

			this.selectedItems = this.scope.find('.ipsPageAction');
		},

		submitImport: function(e) {
			let items = localStorage.getItem('printfulProducts') ? JSON.parse(localStorage.getItem('printfulProducts')) : [],
				url = this.scope.find('form').attr('action') + "&process=" + items.join(',');
				
				localStorage.removeItem('printfulProducts');
				window.location.href = url;
		},

		cancelImport: function(e) {
			localStorage.removeItem('printfulProducts');

			window.location.href = this.scope.find('form').data('baseurl');
		},

		checkMarkedProducts: function(e) {
			let items = localStorage.getItem('printfulProducts') ? JSON.parse(localStorage.getItem('printfulProducts')) : [];

			if(items.length !== 0) {
				items.map(function( val ) {
					$(`[data-action="markForImport"][data-product-id="${val}"]`).attr('_title', ips.getString('printful_add_to_store_undo')).attr('data-action', 'unmarkForImport').data('action', 'unmarkForImport').addClass('ipsButton_negative').removeClass('ipsButton_primary');
				});

				this.selectedItems.css('display', "block").find('[data-role="count"]').text(ips.pluralize(ips.getString('printfulSelectedForImport'),items.length));
			}
		},
		
		markItemForImport: function(e) {
			e.preventDefault();
			let id = $(e.currentTarget).data('product-id'),
				items = localStorage.getItem('printfulProducts') ? JSON.parse(localStorage.getItem('printfulProducts')) : [];

			if( items.indexOf(id) === -1 ) {
				items.push(id);
				localStorage.setItem('printfulProducts', JSON.stringify(items));
			}
			
			this.selectedItems.css('display', "block").find('[data-role="count"]').text(ips.pluralize(ips.getString('printfulSelectedForImport'),items.length));
			ips.ui.tooltip.respond($(e.currentTarget), {}, {type: 'mouseleave'});
			$(e.currentTarget).attr('_title', ips.getString('printful_add_to_store_undo')).attr('data-action', 'unmarkForImport').data('action', 'unmarkForImport').addClass('ipsButton_negative').removeClass('ipsButton_primary');
			ips.ui.tooltip.respond($(e.currentTarget), {}, {type: 'mouseenter'});
		},

		unmarkItemForImport: function(e) {
			e.preventDefault();
			let id = $(e.currentTarget).data('product-id'),
				items = localStorage.getItem('printfulProducts') ? JSON.parse(localStorage.getItem('printfulProducts')) : [];

			items.splice(items.indexOf(id));
			localStorage.setItem('printfulProducts', JSON.stringify(items));

			this.selectedItems.find('[data-role="count"]').text(ips.pluralize(ips.getString('printfulSelectedForImport'),items.length));

			if(items.length == 0) {
				this.selectedItems.css('display', "none");
			}
			
			ips.ui.tooltip.respond($(e.currentTarget), {}, {type: 'mouseleave'});
			$(e.currentTarget).attr('_title', ips.getString('printful_add_to_store')).attr('data-action', 'markForImport').data('action', 'markForImport').removeClass('ipsButton_negative').addClass('ipsButton_primary');
			ips.ui.tooltip.respond($(e.currentTarget), {}, {type: 'mouseenter'});
		},

        updateView: function(e) {

			e.preventDefault();
            let url = $(e.currentTarget).attr('href');
			
			History.pushState( { controller: 'printfulProductsUpdate' }, document.title, url );
		},

		submitSearch: function(e) {

			let keyCode = e.keyCode ?? e.which;

			if(e.type === "keydown" && keyCode == 13) {
				e.preventDefault();
			}

			let state = History.getState(),
				input = this.scope.find('#printfulSearch'),
				value = input.val(),
				urlObj = ips.utils.url.getURIObject( state.url );
				
			if( e.type === "keydown" && keyCode !== 13 || $.trim(value) === urlObj.queryKey.printfulSearch ) {
				return;
			}

			if(value.length >= 1 && value.length < 3) {
				input.addClass('ipsField_error');
				return;
			} 

			if(input.hasClass('ipsField_error')) {
				input.removeClass('ipsField_error');
			}

			if( !$.trim(value).length ) {
				delete urlObj.queryKey.printfulSearch;
			} else {
				urlObj.queryKey.printfulSearch = encodeURI(value);
			}
			
			History.pushState( { controller: 'printfulProductsUpdate' }, state.title, ips.utils.url.rebuildUriObject( urlObj ) );

		},

		pageJump: function(e) {

			e.preventDefault();
			let url = $(e.currentTarget).attr('action'),
				page = $(e.currentTarget).find('input[name="page"]').val();
			
			url += "&page=" + page;
			
			History.pushState( { controller: 'printfulProductsUpdate' }, document.title, url );
		},
		
		stateChange: function () {
			let state = History.getState();

			if( _.isUndefined( state.data.controller ) || state.data.controller != 'printfulProductsUpdate' ) {
				return;
			}

			this._updateView( state.url, state.title )
		},

		_updateView: function (url, title) {
			let self = this;

			if( this._ajaxCall && _.isFunction( this._ajaxCall.abort ) ){
				this._ajaxCall.abort();
			}

			this._setLoading( true );

			this._ajaxCall = ips.getAjax()( url )
				.done( function (response) {
					$('[data-role="printfulProducts"]').replaceWith(response.contents);
					$( document ).trigger( 'contentChange', [$('[data-role="packageListContainer"]')]);

					/* History.pushState( { controller: 'printfulProductsUpdate' }, title, url ); */
				})
				.always( function () {
					self._setLoading( false );
				});
		},

		_setLoading: function (state) {
			if( state ){
				$('[data-role="printfulProducts"]').css( 'height', $('[data-role="printfulProducts"]').height() ).html('').addClass('ipsLoading');
			} else {
				$('[data-role="printfulProducts"]').css( 'height', 'auto' ).removeClass('ipsLoading');
			}
		}

    });
}(jQuery, _));]]></file>
</javascript>
